<div class="modal fade" tabindex="-1" id="edit-modal">
    <div class="modal-dialog">
      <div class="modal-content bg-dark">
        <div class="modal-header text-white bg-dark">
          <h3 class="modal-title"><b>Edit Profile</b></h3>
          <button type="button" class="btn-close btn text-white" data-bs-dismiss="modal" aria-label="Close">Close</button>
        </div>
        <div class="modal-body text-white bg-dark">
            <form class="needs-validation" id="event-modal form" action="/edit_profile" method="POST" autocomplete="off" novalidate>
            <!-- <form class="needs-validation" id="event-modal form" autocomplete="off" novalidate> -->
                <div class="mb-3">
                    <label for="email" class="form-label">Full Name</label>
                    <input type="text" class="form-control" id="name" name="name" value="<%- name %>">
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div>
                <div class="mb-3">
                    <label for="email" class="form-label">Email address</label>
                    <input type="email" class="form-control" id="email" name="email" value="<%- email %>">
                    <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
                    <div class="invalid-feedback">
                        Invalid email.
                    </div>
                </div>
                <div class="mb-3">
                    <label for="username" class="form-label">Username</label>
                    <input type="text" class="form-control" id="username" name="username" value="<%- username %>">
                    <small id="userHelp" class="form-text text-muted">No special characters. Max 8 characters.</small>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div>
                <div class="mb-3">
                    <label for="phone" class="form-label">Phone Number</label>
                    <input type="tel" class="form-control" id="phone" name="phone" pattern="[0-9]{10}" value="<%- phone %>">
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">New Password</label>
                    <input type="password" class="form-control" id="password" name="password" required>
                    <small id="userHelp" class="form-text text-muted">Min 8 characters, must have at least 1 number and 1 special character.</small>
                    <div class="invalid-feedback">
                        Invalid password.
                    </div>
                </div>
                <div class="mb-3">
                    <label for="passwordConf" class="form-label">Confirm New Password</label>
                    <input type="password" class="form-control" id="passwordConf" name="passwordConf" required>
                    <div class="invalid-feedback">
                        Passwords do not match.
                    </div>
                </div>
                <button type="submit" class="btn btn-warning" id="submit_button" value="<%= person %>" name="user_id">Submit</button>
            </form>
        </div>
      </div>
    </div>
</div>  

<script>
    let password_regex = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/;
    let password = document.querySelector('#password');
    password.addEventListener('input', e => {
        if(!password_regex.test(password.value)){
            password.setCustomValidity('Password must be 8 characters and contain at least 1 number and 1 special character.');  
        } else {
            password.setCustomValidity('');
        }
    });

    let passwordConf = document.querySelector('#passwordConf');
    passwordConf.addEventListener('input', e => {
        if(passwordConf.value != password.value){
            passwordConf.setCustomValidity('Passwords must match.');  
        } else {
            passwordConf.setCustomValidity('');
        }
    });

    let name = document.querySelector('#name');
    let name_regex =  /^[A-Za-z\s]*$/;
    name.addEventListener('input', e => {
        console.log(name.value);
        if(!name_regex.test(name.value)){
            name.setCustomValidity('Name can only contain letters and whitespaces');  
        } else {
            name.setCustomValidity('');
        }
    });

    let username = document.querySelector('#username');
    let username_regex = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]+/;
    username.addEventListener('input', e => {
        console.log(username.value);
        if(username_regex.test(username.value) || username.value.length > 8){
            username.setCustomValidity('Username too long or username contains special characters');  
        } else {
            username.setCustomValidity('');
        }
    });

    (function (){
        let edit_form = document.querySelector('.needs-validation');

        edit_form.addEventListener('submit', e => {
            if(!edit_form.checkValidity()){
                e.preventDefault();
                e.stopPropagation();
            }
            edit_form.classList.add('was-validated')
        }, false);
    })()

    function showEdit(){
        let EVENT_MODAL = new bootstrap.Modal(document.getElementById('edit-modal'));
        EVENT_MODAL.show();
    }
</script>